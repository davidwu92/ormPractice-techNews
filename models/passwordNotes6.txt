NOTES PT. 6

In our User model, we'll use bcrypt to hash passwords before storing them.
This needs to happen before new user data is created (or updated) in the db.
So we put HOOKS (functions dictating lifecycle events) into the 2nd, table-config object of model.init()

  bcrypt.hash( oldpassword, 10 )
  ~10 is the saltRound value.
  ~Takes some time to return the hash, so await its completion.


Hashing takes CPU, so we must use async/await functions in our hooks.

Hooks we're using:

1. beforeCreate() runs before creating/storing a new row of data

2. beforeUpdate() runs before updating a row
    ~for this to work, the PUT ROUTE (User.update) needs option {individualHooks: true}

